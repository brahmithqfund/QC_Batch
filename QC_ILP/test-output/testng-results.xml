<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<testng-results skipped="0" failed="0" ignored="44" total="53" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="8257444" started-at="2019-03-29T12:57:39Z" finished-at="2019-03-29T15:15:17Z">
    <groups>
      <group name="Ratikanta_ILP">
        <method signature="QCStore.RQC_Bankruptcy_Discharge_Txn_Testdata()[pri:2, instance:tests.QCStore@5f9d02cb]" name="RQC_Bankruptcy_Discharge_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_Bankruptcy_Dismiss_Txn_Testdata()[pri:3, instance:tests.QCStore@5f9d02cb]" name="RQC_Bankruptcy_Dismiss_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_Bankruptcy_WORecovery_Txn_Testdata()[pri:1, instance:tests.QCStore@5f9d02cb]" name="RQC_Bankruptcy_WORecovery_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_DefaultPayment_Txn_Testdata()[pri:5, instance:tests.QCStore@5f9d02cb]" name="RQC_DefaultPayment_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_DefaultPayment_Void_Txn_Testdata()[pri:6, instance:tests.QCStore@5f9d02cb]" name="RQC_DefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_Default_Refinance_Txn_Testdata()[pri:4, instance:tests.QCStore@5f9d02cb]" name="RQC_Default_Refinance_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_Default_TLPConversion_Txn_Testdata()[pri:9, instance:tests.QCStore@5f9d02cb]" name="RQC_Default_TLPConversion_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_WriteOffRecovery_Txn_Testdata()[pri:7, instance:tests.QCStore@5f9d02cb]" name="RQC_WriteOffRecovery_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_WriteOffRecovery_Void_Txn_Testdata()[pri:8, instance:tests.QCStore@5f9d02cb]" name="RQC_WriteOffRecovery_Void_Txn_Testdata" class="tests.QCStore"/>
      </group> <!-- Ratikanta_ILP -->
    </groups>
    <test name="Test" duration-ms="8257444" started-at="2019-03-29T12:57:39Z" finished-at="2019-03-29T15:15:17Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@5f9d02cb]" name="setup" is-config="true" duration-ms="107" started-at="2019-03-29T12:57:39Z" finished-at="2019-03-29T12:57:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T12:57:40Z" finished-at="2019-03-29T12:57:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_Bankruptcy_WORecovery_Txn_Testdata()[pri:1, instance:tests.QCStore@5f9d02cb]" name="RQC_Bankruptcy_WORecovery_Txn_Testdata" duration-ms="586843" started-at="2019-03-29T12:57:45Z" finished-at="2019-03-29T13:07:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_Bankruptcy_WORecovery_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-29T13:07:31Z" finished-at="2019-03-29T13:07:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="222" started-at="2019-03-29T13:07:31Z" finished-at="2019-03-29T13:07:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_Bankruptcy_WORecovery_Txn_Testdata status=SUCCESS method=QCStore.RQC_Bankruptcy_WORecovery_Txn_Testdata()[pri:1, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T13:07:32Z" finished-at="2019-03-29T13:07:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_Bankruptcy_Discharge_Txn_Testdata()[pri:2, instance:tests.QCStore@5f9d02cb]" name="RQC_Bankruptcy_Discharge_Txn_Testdata" duration-ms="737687" started-at="2019-03-29T13:07:37Z" finished-at="2019-03-29T13:19:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_Bankruptcy_Discharge_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-29T13:19:54Z" finished-at="2019-03-29T13:19:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="79" started-at="2019-03-29T13:19:54Z" finished-at="2019-03-29T13:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_Bankruptcy_Discharge_Txn_Testdata status=SUCCESS method=QCStore.RQC_Bankruptcy_Discharge_Txn_Testdata()[pri:2, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<testng-results skipped="0" failed="0" ignored="54" total="55" passed="1">
  <reporter-output>
  </reporter-output>
<<<<<<< HEAD
  <suite name="Suite" duration-ms="81694" started-at="2019-03-27T05:31:54Z" finished-at="2019-03-27T05:33:16Z">
=======
=======
>>>>>>> janaki1.2
<testng-results skipped="0" failed="0" ignored="52" total="53" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="147815" started-at="2019-04-04T09:17:25Z" finished-at="2019-04-04T09:19:53Z">
    <groups>
      <group name="Janaki_EOD_set2">
        <method signature="QCStore.JQC_ILP_GraceDays_Deposit_EOD_Txn()[pri:9, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_GraceDays_Deposit_EOD_Txn" class="tests.QCStore"/>
      </group> <!-- Janaki_EOD_set2 -->
    </groups>
    <test name="Test" duration-ms="147815" started-at="2019-04-04T09:17:25Z" finished-at="2019-04-04T09:19:53Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@5f9d02cb]" name="setup" is-config="true" duration-ms="93" started-at="2019-04-04T09:17:25Z" finished-at="2019-04-04T09:17:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5024" started-at="2019-04-04T09:17:25Z" finished-at="2019-04-04T09:17:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_ILP_GraceDays_Deposit_EOD_Txn()[pri:9, instance:tests.QCStore@5f9d02cb]" name="JQC_ILP_GraceDays_Deposit_EOD_Txn" duration-ms="142480" started-at="2019-04-04T09:17:30Z" finished-at="2019-04-04T09:19:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_GraceDays_Deposit_EOD_Txn -->
<<<<<<< HEAD
<<<<<<< HEAD
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="234" started-at="2019-03-27T05:33:16Z" finished-at="2019-03-27T05:33:16Z">
          <params>
            <param index="0">
              <value>
<<<<<<< HEAD
                <![CDATA[[TestResult name=JQC_ILP_Deposit_EOD_Txn status=SUCCESS method=QCStore.JQC_ILP_Deposit_EOD_Txn()[pri:8, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> janaki1.2
=======
<testng-results skipped="0" failed="0" ignored="44" total="46" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="2806434" started-at="2019-03-23T17:48:23Z" finished-at="2019-03-23T18:35:10Z">
    <groups>
      <group name="Ratikanta_ILP">
        <method signature="QCStore.RQC_Default_TLPConversion_Txn_Testdata()[pri:9, instance:tests.QCStore@527740a2]" name="RQC_Default_TLPConversion_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_WriteOffRecovery_Void_Txn_Testdata()[pri:8, instance:tests.QCStore@527740a2]" name="RQC_WriteOffRecovery_Void_Txn_Testdata" class="tests.QCStore"/>
      </group> <!-- Ratikanta_ILP -->
    </groups>
    <test name="Test" duration-ms="2806434" started-at="2019-03-23T17:48:23Z" finished-at="2019-03-23T18:35:10Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="121" started-at="2019-03-23T17:48:23Z" finished-at="2019-03-23T17:48:23Z">
>>>>>>> ed2c491bd27e4295563c266a26fe8e49e10943ef
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-29T13:19:54Z" finished-at="2019-03-29T13:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_Bankruptcy_Dismiss_Txn_Testdata()[pri:3, instance:tests.QCStore@5f9d02cb]" name="RQC_Bankruptcy_Dismiss_Txn_Testdata" duration-ms="636929" started-at="2019-03-29T13:19:59Z" finished-at="2019-03-29T13:30:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_Bankruptcy_Dismiss_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="72" started-at="2019-03-29T13:30:36Z" finished-at="2019-03-29T13:30:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_Bankruptcy_Dismiss_Txn_Testdata status=SUCCESS method=QCStore.RQC_Bankruptcy_Dismiss_Txn_Testdata()[pri:3, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-29T13:30:36Z" finished-at="2019-03-29T13:30:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T13:30:36Z" finished-at="2019-03-29T13:30:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_Default_Refinance_Txn_Testdata()[pri:4, instance:tests.QCStore@5f9d02cb]" name="RQC_Default_Refinance_Txn_Testdata" duration-ms="1010227" started-at="2019-03-29T13:30:41Z" finished-at="2019-03-29T13:47:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_Default_Refinance_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-29T13:47:32Z" finished-at="2019-03-29T13:47:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="48" started-at="2019-03-29T13:47:32Z" finished-at="2019-03-29T13:47:32Z">
          <params>
            <param index="0">
              <value>
<<<<<<< HEAD
                <![CDATA[[TestResult name=RQC_Default_Refinance_Txn_Testdata status=SUCCESS method=QCStore.RQC_Default_Refinance_Txn_Testdata()[pri:4, instance:tests.QCStore@5f9d02cb] output={null}]]]>
=======
                <![CDATA[[TestResult name=RQC_WriteOffRecovery_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_WriteOffRecovery_Void_Txn_Testdata()[pri:8, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> Ratikanta1.1
=======
=======
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-03-29T09:23:56Z" finished-at="2019-03-29T09:23:56Z">
=======
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-04T09:19:53Z" finished-at="2019-04-04T09:19:53Z">
>>>>>>> janaki1.2
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="218" started-at="2019-04-04T09:19:53Z" finished-at="2019-04-04T09:19:53Z">
          <params>
            <param index="0">
              <value>
>>>>>>> 33354a572293420cb1c9bb16b353c54411f71fe2
                <![CDATA[[TestResult name=JQC_ILP_GraceDays_Deposit_EOD_Txn status=SUCCESS method=QCStore.JQC_ILP_GraceDays_Deposit_EOD_Txn()[pri:9, instance:tests.QCStore@5f9d02cb] output={null}]]]>
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> janaki1.2
>>>>>>> ed2c491bd27e4295563c266a26fe8e49e10943ef
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T13:47:32Z" finished-at="2019-03-29T13:47:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_DefaultPayment_Txn_Testdata()[pri:5, instance:tests.QCStore@5f9d02cb]" name="RQC_DefaultPayment_Txn_Testdata" duration-ms="1091633" started-at="2019-03-29T13:47:37Z" finished-at="2019-03-29T14:05:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_DefaultPayment_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-29T14:05:48Z" finished-at="2019-03-29T14:05:48Z">
=======
<<<<<<< HEAD
<<<<<<< HEAD
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-21T07:39:13Z" finished-at="2019-03-21T07:39:13Z">
=======
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-27T05:33:16Z" finished-at="2019-03-27T05:33:16Z">
>>>>>>> janaki1.2
>>>>>>> ed2c491bd27e4295563c266a26fe8e49e10943ef
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="52" started-at="2019-03-29T14:05:48Z" finished-at="2019-03-29T14:05:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_DefaultPayment_Txn_Testdata status=SUCCESS method=QCStore.RQC_DefaultPayment_Txn_Testdata()[pri:5, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T14:05:48Z" finished-at="2019-03-29T14:05:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_DefaultPayment_Void_Txn_Testdata()[pri:6, instance:tests.QCStore@5f9d02cb]" name="RQC_DefaultPayment_Void_Txn_Testdata" duration-ms="1199321" started-at="2019-03-29T14:05:53Z" finished-at="2019-03-29T14:25:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_DefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-29T14:25:53Z" finished-at="2019-03-29T14:25:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="55" started-at="2019-03-29T14:25:53Z" finished-at="2019-03-29T14:25:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_DefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_DefaultPayment_Void_Txn_Testdata()[pri:6, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T14:25:53Z" finished-at="2019-03-29T14:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_WriteOffRecovery_Txn_Testdata()[pri:7, instance:tests.QCStore@5f9d02cb]" name="RQC_WriteOffRecovery_Txn_Testdata" duration-ms="894085" started-at="2019-03-29T14:25:58Z" finished-at="2019-03-29T14:40:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_WriteOffRecovery_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-03-29T14:40:52Z" finished-at="2019-03-29T14:40:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="57" started-at="2019-03-29T14:40:52Z" finished-at="2019-03-29T14:40:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_WriteOffRecovery_Txn_Testdata status=SUCCESS method=QCStore.RQC_WriteOffRecovery_Txn_Testdata()[pri:7, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-29T14:40:52Z" finished-at="2019-03-29T14:40:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_WriteOffRecovery_Void_Txn_Testdata()[pri:8, instance:tests.QCStore@5f9d02cb]" name="RQC_WriteOffRecovery_Void_Txn_Testdata" duration-ms="909555" started-at="2019-03-29T14:40:57Z" finished-at="2019-03-29T14:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_WriteOffRecovery_Void_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-03-29T14:56:06Z" finished-at="2019-03-29T14:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="57" started-at="2019-03-29T14:56:06Z" finished-at="2019-03-29T14:56:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_WriteOffRecovery_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_WriteOffRecovery_Void_Txn_Testdata()[pri:8, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-29T14:56:07Z" finished-at="2019-03-29T14:56:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_Default_TLPConversion_Txn_Testdata()[pri:9, instance:tests.QCStore@5f9d02cb]" name="RQC_Default_TLPConversion_Txn_Testdata" duration-ms="1145315" started-at="2019-03-29T14:56:12Z" finished-at="2019-03-29T15:15:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_Default_TLPConversion_Txn_Testdata -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-03-29T15:15:17Z" finished-at="2019-03-29T15:15:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="63" started-at="2019-03-29T15:15:17Z" finished-at="2019-03-29T15:15:17Z">
          <params>
            <param index="0">
              <value>
<<<<<<< HEAD
                <![CDATA[[TestResult name=RQC_Default_TLPConversion_Txn_Testdata status=SUCCESS method=QCStore.RQC_Default_TLPConversion_Txn_Testdata()[pri:9, instance:tests.QCStore@5f9d02cb] output={null}]]]>
=======
                <![CDATA[[TestResult name=RQC_Default_TLPConversion_Txn_Testdata status=SUCCESS method=QCStore.RQC_Default_TLPConversion_Txn_Testdata()[pri:9, instance:tests.QCStore@527740a2] output={null}]]]>
=======
<testng-results skipped="0" failed="2" ignored="41" total="55" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="6967652" started-at="2019-04-01T11:07:55Z" finished-at="2019-04-01T13:04:02Z">
=======
<testng-results skipped="0" failed="1" ignored="40" total="47" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="3277286" started-at="2019-04-05T13:31:53Z" finished-at="2019-04-05T14:26:31Z">
>>>>>>> anoop1.1
    <groups>
      <group name="Anoop">
        <method signature="QCStore.ILP_CheckAutoClear()[pri:11, instance:tests.QCStore@5f9d02cb]" name="ILP_CheckAutoClear" class="tests.QCStore"/>
        <method signature="QCStore.ILP_ProcessClear()[pri:10, instance:tests.QCStore@5f9d02cb]" name="ILP_ProcessClear" class="tests.QCStore"/>
        <method signature="QCStore.ILP_RefinanceStepSame()[pri:7, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepSame" class="tests.QCStore"/>
        <method signature="QCStore.ILP_RefinanceStepSame_Void()[pri:9, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepSame_Void" class="tests.QCStore"/>
        <method signature="QCStore.ILP_RefinanceStepUpVoid()[pri:8, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepUpVoid" class="tests.QCStore"/>
        <method signature="QCStore.ILP_borrowregNewloan()[pri:13, instance:tests.QCStore@5f9d02cb]" name="ILP_borrowregNewloan" class="tests.QCStore"/>
        <method signature="QCStore.ILP_voidRefinance()[pri:14, instance:tests.QCStore@5f9d02cb]" name="ILP_voidRefinance" class="tests.QCStore"/>
      </group> <!-- Anoop -->
    </groups>
    <test name="Test" duration-ms="3277286" started-at="2019-04-05T13:31:53Z" finished-at="2019-04-05T14:26:31Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@5f9d02cb]" name="setup" is-config="true" duration-ms="107" started-at="2019-04-05T13:31:53Z" finished-at="2019-04-05T13:31:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-01T11:07:55Z" finished-at="2019-04-01T11:08:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_Redeposit()[pri:1, instance:tests.QCStore@5f9d02cb]" name="ILP_Redeposit" duration-ms="821494" started-at="2019-04-01T11:08:00Z" finished-at="2019-04-01T11:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_Redeposit -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-04-01T11:21:41Z" finished-at="2019-04-01T11:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="1" started-at="2019-04-01T11:21:41Z" finished-at="2019-04-01T11:21:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_Redeposit status=SUCCESS method=QCStore.ILP_Redeposit()[pri:1, instance:tests.QCStore@5f9d02cb] output={null}]]]>
>>>>>>> anoop1.1
<<<<<<< HEAD
>>>>>>> ed2c491bd27e4295563c266a26fe8e49e10943ef
=======
=======
>>>>>>> janaki1.2
>>>>>>> 33354a572293420cb1c9bb16b353c54411f71fe2
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
<<<<<<< HEAD
=======
=======
>>>>>>> 33354a572293420cb1c9bb16b353c54411f71fe2
<<<<<<< HEAD
>>>>>>> Ratikanta1.1
=======
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-01T11:21:41Z" finished-at="2019-04-01T11:21:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_inactiveNewloan()[pri:2, instance:tests.QCStore@5f9d02cb]" name="ILP_inactiveNewloan" duration-ms="157442" started-at="2019-04-01T11:21:46Z" finished-at="2019-04-01T11:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_inactiveNewloan -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-04-01T11:24:24Z" finished-at="2019-04-01T11:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="0" started-at="2019-04-01T11:24:24Z" finished-at="2019-04-01T11:24:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_inactiveNewloan status=SUCCESS method=QCStore.ILP_inactiveNewloan()[pri:2, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-04-01T11:24:24Z" finished-at="2019-04-01T11:24:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_maxloanCount()[pri:3, instance:tests.QCStore@5f9d02cb]" name="ILP_maxloanCount" duration-ms="176665" started-at="2019-04-01T11:24:29Z" finished-at="2019-04-01T11:27:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_maxloanCount -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-04-01T11:27:25Z" finished-at="2019-04-01T11:27:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="0" started-at="2019-04-01T11:27:25Z" finished-at="2019-04-01T11:27:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_maxloanCount status=SUCCESS method=QCStore.ILP_maxloanCount()[pri:3, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-01T11:27:25Z" finished-at="2019-04-01T11:27:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_rescindloan()[pri:4, instance:tests.QCStore@5f9d02cb]" name="ILP_rescindloan" duration-ms="219787" started-at="2019-04-01T11:27:30Z" finished-at="2019-04-01T11:31:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_rescindloan -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="1" started-at="2019-04-01T11:31:10Z" finished-at="2019-04-01T11:31:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_rescindloan status=SUCCESS method=QCStore.ILP_rescindloan()[pri:4, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-01T11:31:10Z" finished-at="2019-04-01T11:31:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-01T11:31:10Z" finished-at="2019-04-01T11:31:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_agerescindtest()[pri:5, instance:tests.QCStore@5f9d02cb]" name="ILP_agerescindtest" duration-ms="233600" started-at="2019-04-01T11:31:15Z" finished-at="2019-04-01T11:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_agerescindtest -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-01T11:35:09Z" finished-at="2019-04-01T11:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="0" started-at="2019-04-01T11:35:09Z" finished-at="2019-04-01T11:35:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_agerescindtest status=SUCCESS method=QCStore.ILP_agerescindtest()[pri:5, instance:tests.QCStore@5f9d02cb] output={null}]]]>
=======
>>>>>>> janaki1.2
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-01T11:35:09Z" finished-at="2019-04-01T11:35:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_RefinanceStepup()[pri:6, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepup" duration-ms="661106" started-at="2019-04-01T11:35:14Z" finished-at="2019-04-01T11:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_RefinanceStepup -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-01T11:46:15Z" finished-at="2019-04-01T11:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="0" started-at="2019-04-01T11:46:15Z" finished-at="2019-04-01T11:46:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_RefinanceStepup status=SUCCESS method=QCStore.ILP_RefinanceStepup()[pri:6, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-04-01T11:46:15Z" finished-at="2019-04-01T11:46:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_RefinanceStepSame()[pri:7, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepSame" duration-ms="734871" started-at="2019-04-01T11:46:20Z" finished-at="2019-04-01T11:58:35Z">
=======
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-04-05T13:31:54Z" finished-at="2019-04-05T13:31:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_RefinanceStepSame()[pri:7, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepSame" duration-ms="630717" started-at="2019-04-05T13:31:59Z" finished-at="2019-04-05T13:42:29Z">
>>>>>>> anoop1.1
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_RefinanceStepSame -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-05T13:42:29Z" finished-at="2019-04-05T13:42:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="279" started-at="2019-04-05T13:42:29Z" finished-at="2019-04-05T13:42:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_RefinanceStepSame status=SUCCESS method=QCStore.ILP_RefinanceStepSame()[pri:7, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-05T13:42:30Z" finished-at="2019-04-05T13:42:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_RefinanceStepUpVoid()[pri:8, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepUpVoid" duration-ms="657219" started-at="2019-04-05T13:42:35Z" finished-at="2019-04-05T13:53:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_RefinanceStepUpVoid -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="87" started-at="2019-04-05T13:53:32Z" finished-at="2019-04-05T13:53:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_RefinanceStepUpVoid status=SUCCESS method=QCStore.ILP_RefinanceStepUpVoid()[pri:8, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-05T13:53:32Z" finished-at="2019-04-05T13:53:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-05T13:53:32Z" finished-at="2019-04-05T13:53:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_RefinanceStepSame_Void()[pri:9, instance:tests.QCStore@5f9d02cb]" name="ILP_RefinanceStepSame_Void" duration-ms="660033" started-at="2019-04-05T13:53:37Z" finished-at="2019-04-05T14:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_RefinanceStepSame_Void -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="1" started-at="2019-04-05T14:04:37Z" finished-at="2019-04-05T14:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="35" started-at="2019-04-05T14:04:37Z" finished-at="2019-04-05T14:04:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_RefinanceStepSame_Void status=SUCCESS method=QCStore.ILP_RefinanceStepSame_Void()[pri:9, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-05T14:04:37Z" finished-at="2019-04-05T14:04:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_ProcessClear()[pri:10, instance:tests.QCStore@5f9d02cb]" name="ILP_ProcessClear" duration-ms="562632" started-at="2019-04-05T14:04:42Z" finished-at="2019-04-05T14:14:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_ProcessClear -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="37" started-at="2019-04-05T14:14:05Z" finished-at="2019-04-05T14:14:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_ProcessClear status=SUCCESS method=QCStore.ILP_ProcessClear()[pri:10, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-05T14:14:05Z" finished-at="2019-04-05T14:14:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-04-05T14:14:05Z" finished-at="2019-04-05T14:14:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_CheckAutoClear()[pri:11, instance:tests.QCStore@5f9d02cb]" name="ILP_CheckAutoClear" duration-ms="585191" started-at="2019-04-05T14:14:10Z" finished-at="2019-04-05T14:23:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_CheckAutoClear -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="34" started-at="2019-04-05T14:23:55Z" finished-at="2019-04-05T14:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_CheckAutoClear status=SUCCESS method=QCStore.ILP_CheckAutoClear()[pri:11, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-05T14:23:55Z" finished-at="2019-04-05T14:23:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-05T14:23:55Z" finished-at="2019-04-05T14:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="ILP_borrowregNewloan()[pri:13, instance:tests.QCStore@5f9d02cb]" name="ILP_borrowregNewloan" duration-ms="145837" started-at="2019-04-05T14:24:00Z" finished-at="2019-04-05T14:26:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_borrowregNewloan -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="40" started-at="2019-04-05T14:26:26Z" finished-at="2019-04-05T14:26:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_borrowregNewloan status=SUCCESS method=QCStore.ILP_borrowregNewloan()[pri:13, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-05T14:26:26Z" finished-at="2019-04-05T14:26:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-05T14:26:26Z" finished-at="2019-04-05T14:26:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="ILP_voidRefinance()[pri:14, instance:tests.QCStore@5f9d02cb]" name="ILP_voidRefinance" duration-ms="2" started-at="2019-04-05T14:26:31Z" finished-at="2019-04-05T14:26:31Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\QC_Batch\QC_ILP\ATestData\CSR\ILP_Monthly\QC_Loan_Refinance_Void.xls (The system cannot find the file specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\QC_Batch\QC_ILP\ATestData\CSR\ILP_Monthly\QC_Loan_Refinance_Void.xls (The system cannot find the file specified)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(Unknown Source)
at java.io.FileInputStream.<init>(Unknown Source)
at java.io.FileInputStream.<init>(Unknown Source)
at tests.ExcelNew.<init>(ExcelNew.java:35)
at tests.QCStore.ILP_voidRefinance(QCStore.java:2459)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ILP_voidRefinance -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-05T14:26:31Z" finished-at="2019-04-05T14:26:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="FAIL" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="3" started-at="2019-04-05T14:26:31Z" finished-at="2019-04-05T14:26:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ILP_voidRefinance status=FAILURE method=QCStore.ILP_voidRefinance()[pri:14, instance:tests.QCStore@5f9d02cb] output={null}]]]>
<<<<<<< HEAD
=======
  <suite name="Suite" duration-ms="665366" started-at="2019-03-26T13:00:12Z" finished-at="2019-03-26T13:11:18Z">
=======
<testng-results skipped="0" failed="0" ignored="52" total="53" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="425306" started-at="2019-04-04T06:39:04Z" finished-at="2019-04-04T06:46:09Z">
>>>>>>> brahmith1.1
    <groups>
      <group name="Brahmith1">
        <method signature="QCStore.QC_Installmentpayment_Void_Txn()[pri:22, instance:tests.QCStore@5f9d02cb]" name="QC_Installmentpayment_Void_Txn" class="tests.QCStore"/>
      </group> <!-- Brahmith1 -->
    </groups>
    <test name="Test" duration-ms="425306" started-at="2019-04-04T06:39:04Z" finished-at="2019-04-04T06:46:09Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@5f9d02cb]" name="setup" is-config="true" duration-ms="113" started-at="2019-04-04T06:39:04Z" finished-at="2019-04-04T06:39:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@5f9d02cb]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-04-04T06:39:04Z" finished-at="2019-04-04T06:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_Installmentpayment_Void_Txn()[pri:22, instance:tests.QCStore@5f9d02cb]" name="QC_Installmentpayment_Void_Txn" duration-ms="419917" started-at="2019-04-04T06:39:09Z" finished-at="2019-04-04T06:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_Installmentpayment_Void_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-04-04T06:46:09Z" finished-at="2019-04-04T06:46:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@5f9d02cb]" name="getResult" is-config="true" duration-ms="256" started-at="2019-04-04T06:46:09Z" finished-at="2019-04-04T06:46:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_Installmentpayment_Void_Txn status=SUCCESS method=QCStore.QC_Installmentpayment_Void_Txn()[pri:22, instance:tests.QCStore@5f9d02cb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> anoop1.1
=======
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@5f9d02cb]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-26T13:11:17Z" finished-at="2019-03-26T13:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
>>>>>>> brahmith1.1
<<<<<<< HEAD
>>>>>>> ed2c491bd27e4295563c266a26fe8e49e10943ef
=======
=======
>>>>>>> janaki1.2
>>>>>>> 33354a572293420cb1c9bb16b353c54411f71fe2
=======
>>>>>>> brahmith1.1
=======
>>>>>>> janaki1.2
=======
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS2-48', ip: '192.168.2.48', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_171'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS2-48', ip: '192.168.2.48', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_171'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:125)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:294)
at tests.QCStore.getScreenhot(QCStore.java:3407)
at tests.QCStore.getResult(QCStore.java:3427)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
>>>>>>> anoop1.1
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
