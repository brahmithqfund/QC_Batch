<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<testng-results skipped="0" failed="7" ignored="19" total="26" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="40" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
=======
<testng-results skipped="0" failed="2" ignored="0" total="16" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="18452279" started-at="2019-02-18T07:11:00Z" finished-at="2019-02-18T12:18:33Z">
>>>>>>> f50b11208812b9a3da18b28f508ffb930f9f5fc9
    <groups>
      <group name="Janaki">
        <method signature="QCStore.JQC_ILP_Deposit_Menu_Txn()[pri:0, instance:tests.QCStore@20398b7c]" name="JQC_ILP_Deposit_Menu_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_Deposit_MidDay_Txn()[pri:4, instance:tests.QCStore@20398b7c]" name="JQC_ILP_Deposit_MidDay_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_Deposit_dropdown_Txn()[pri:1, instance:tests.QCStore@20398b7c]" name="JQC_ILP_Deposit_dropdown_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_GraceDays_Deposit_Menu_Txn()[pri:2, instance:tests.QCStore@20398b7c]" name="JQC_ILP_GraceDays_Deposit_Menu_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_GraceDays_Deposit_MidDay_Txn()[pri:3, instance:tests.QCStore@20398b7c]" name="JQC_ILP_GraceDays_Deposit_MidDay_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_GraceDays_Deposit_dropdown_Txn()[pri:5, instance:tests.QCStore@20398b7c]" name="JQC_ILP_GraceDays_Deposit_dropdown_Txn" class="tests.QCStore"/>
        <method signature="QCStore.JQC_ILP_SignaturLoan_Default_Txn()[pri:7, instance:tests.QCStore@20398b7c]" name="JQC_ILP_SignaturLoan_Default_Txn" class="tests.QCStore"/>
      </group> <!-- Janaki -->
    </groups>
<<<<<<< HEAD
    <test name="Test" duration-ms="40" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
      <class name="tests.QCStore">
        <test-method status="FAIL" signature="JQC_ILP_Deposit_Menu_Txn()[pri:0, instance:tests.QCStore@20398b7c]" name="JQC_ILP_Deposit_Menu_Txn" duration-ms="9" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_Deposit_Menu_Txn(QCStore.java:1212)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Deposit_Menu_Txn -->
        <test-method status="FAIL" signature="JQC_ILP_Deposit_dropdown_Txn()[pri:1, instance:tests.QCStore@20398b7c]" name="JQC_ILP_Deposit_dropdown_Txn" duration-ms="2" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_Deposit_dropdown_Txn(QCStore.java:1264)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_Deposit_dropdown_Txn -->
        <test-method status="FAIL" signature="JQC_ILP_GraceDays_Deposit_Menu_Txn()[pri:2, instance:tests.QCStore@20398b7c]" name="JQC_ILP_GraceDays_Deposit_Menu_Txn" duration-ms="1" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_GraceDays_Deposit_Menu_Txn(QCStore.java:1318)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_GraceDays_Deposit_Menu_Txn -->
        <test-method status="FAIL" signature="JQC_ILP_GraceDays_Deposit_MidDay_Txn()[pri:3, instance:tests.QCStore@20398b7c]" name="JQC_ILP_GraceDays_Deposit_MidDay_Txn" duration-ms="1" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_GraceDays_Deposit_MidDay_Txn(QCStore.java:1326)
=======
    <test name="Default test" duration-ms="18452279" started-at="2019-02-18T07:11:00Z" finished-at="2019-02-18T12:18:33Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@20398b7c]" name="setup" is-config="true" duration-ms="95" started-at="2019-02-18T07:11:00Z" finished-at="2019-02-18T07:11:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5012" started-at="2019-02-18T07:11:01Z" finished-at="2019-02-18T07:11:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_NewLoan_Promotion_Txn()[pri:4, instance:tests.QCStore@20398b7c]" name="QC_NewLoan_Promotion_Txn" duration-ms="204975" started-at="2019-02-18T07:11:06Z" finished-at="2019-02-18T07:14:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_NewLoan_Promotion_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="229" started-at="2019-02-18T07:14:30Z" finished-at="2019-02-18T07:14:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_NewLoan_Promotion_Txn status=SUCCESS method=QCStore.QC_NewLoan_Promotion_Txn()[pri:4, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T07:14:30Z" finished-at="2019-02-18T07:14:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="9233" started-at="2019-02-18T07:14:31Z" finished-at="2019-02-18T07:14:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_NewLoan_Void_Txn()[pri:7, instance:tests.QCStore@20398b7c]" name="QC_NewLoan_Void_Txn" duration-ms="249020" started-at="2019-02-18T07:14:40Z" finished-at="2019-02-18T07:18:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_NewLoan_Void_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="2" started-at="2019-02-18T07:18:49Z" finished-at="2019-02-18T07:18:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="85" started-at="2019-02-18T07:18:49Z" finished-at="2019-02-18T07:18:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_NewLoan_Void_Txn status=SUCCESS method=QCStore.QC_NewLoan_Void_Txn()[pri:7, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5019" started-at="2019-02-18T07:18:49Z" finished-at="2019-02-18T07:18:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_ILP_Buyback_Txn()[pri:16, instance:tests.QCStore@20398b7c]" name="QC_ILP_Buyback_Txn" duration-ms="966177" started-at="2019-02-18T07:18:54Z" finished-at="2019-02-18T07:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_ILP_Buyback_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="38" started-at="2019-02-18T07:35:00Z" finished-at="2019-02-18T07:35:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_ILP_Buyback_Txn status=SUCCESS method=QCStore.QC_ILP_Buyback_Txn()[pri:16, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T07:35:00Z" finished-at="2019-02-18T07:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5010" started-at="2019-02-18T07:35:00Z" finished-at="2019-02-18T07:35:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_ILP_Buyback_Void_Txn()[pri:17, instance:tests.QCStore@20398b7c]" name="QC_ILP_Buyback_Void_Txn" duration-ms="915872" started-at="2019-02-18T07:35:05Z" finished-at="2019-02-18T07:50:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_ILP_Buyback_Void_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="58" started-at="2019-02-18T07:50:21Z" finished-at="2019-02-18T07:50:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_ILP_Buyback_Void_Txn status=SUCCESS method=QCStore.QC_ILP_Buyback_Void_Txn()[pri:17, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T07:50:21Z" finished-at="2019-02-18T07:50:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5039" started-at="2019-02-18T07:50:21Z" finished-at="2019-02-18T07:50:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_Installmentpayment_Txn()[pri:21, instance:tests.QCStore@20398b7c]" name="QC_Installmentpayment_Txn" duration-ms="797100" started-at="2019-02-18T07:50:26Z" finished-at="2019-02-18T08:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_Installmentpayment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="47" started-at="2019-02-18T08:03:43Z" finished-at="2019-02-18T08:03:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_Installmentpayment_Txn status=SUCCESS method=QCStore.QC_Installmentpayment_Txn()[pri:21, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T08:03:43Z" finished-at="2019-02-18T08:03:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5011" started-at="2019-02-18T08:03:43Z" finished-at="2019-02-18T08:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_Installmentpayment_Void_Txn()[pri:22, instance:tests.QCStore@20398b7c]" name="QC_Installmentpayment_Void_Txn" duration-ms="833025" started-at="2019-02-18T08:03:48Z" finished-at="2019-02-18T08:17:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_Installmentpayment_Void_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T08:17:41Z" finished-at="2019-02-18T08:17:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="37" started-at="2019-02-18T08:17:41Z" finished-at="2019-02-18T08:17:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_Installmentpayment_Void_Txn status=SUCCESS method=QCStore.QC_Installmentpayment_Void_Txn()[pri:22, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5016" started-at="2019-02-18T08:17:42Z" finished-at="2019-02-18T08:17:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_PayAnyotherAmount_Txn()[pri:23, instance:tests.QCStore@20398b7c]" name="QC_PayAnyotherAmount_Txn" duration-ms="2414533" started-at="2019-02-18T08:17:47Z" finished-at="2019-02-18T08:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_PayAnyotherAmount_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="52" started-at="2019-02-18T08:58:01Z" finished-at="2019-02-18T08:58:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_PayAnyotherAmount_Txn status=SUCCESS method=QCStore.QC_PayAnyotherAmount_Txn()[pri:23, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T08:58:01Z" finished-at="2019-02-18T08:58:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5013" started-at="2019-02-18T08:58:01Z" finished-at="2019-02-18T08:58:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_PayAnyotherAmount_Void_Txn()[pri:24, instance:tests.QCStore@20398b7c]" name="QC_PayAnyotherAmount_Void_Txn" duration-ms="895402" started-at="2019-02-18T08:58:06Z" finished-at="2019-02-18T09:13:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_PayAnyotherAmount_Void_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="64" started-at="2019-02-18T09:13:02Z" finished-at="2019-02-18T09:13:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_PayAnyotherAmount_Void_Txn status=SUCCESS method=QCStore.QC_PayAnyotherAmount_Void_Txn()[pri:24, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T09:13:02Z" finished-at="2019-02-18T09:13:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5013" started-at="2019-02-18T09:13:02Z" finished-at="2019-02-18T09:13:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="QC_ILP_Return_Menu_Txn()[pri:31, instance:tests.QCStore@20398b7c]" name="QC_ILP_Return_Menu_Txn" duration-ms="1141171" started-at="2019-02-18T09:13:07Z" finished-at="2019-02-18T09:32:08Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at tests.QCReturnCheck.qcRturn(QCReturnCheck.java:305)
at tests.QCStore.QC_ILP_Return_Menu_Txn(QCStore.java:647)
>>>>>>> f50b11208812b9a3da18b28f508ffb930f9f5fc9
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
<<<<<<< HEAD
        </test-method> <!-- JQC_ILP_GraceDays_Deposit_MidDay_Txn -->
        <test-method status="FAIL" signature="JQC_ILP_Deposit_MidDay_Txn()[pri:4, instance:tests.QCStore@20398b7c]" name="JQC_ILP_Deposit_MidDay_Txn" duration-ms="1" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_Deposit_MidDay_Txn(QCStore.java:1414)
=======
        </test-method> <!-- QC_ILP_Return_Menu_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="684" started-at="2019-02-18T09:32:08Z" finished-at="2019-02-18T09:32:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_ILP_Return_Menu_Txn status=FAILURE method=QCStore.QC_ILP_Return_Menu_Txn()[pri:31, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T09:32:08Z" finished-at="2019-02-18T09:32:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5014" started-at="2019-02-18T09:32:08Z" finished-at="2019-02-18T09:32:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="QC_ILP_clear_Menu_Txn()[pri:32, instance:tests.QCStore@20398b7c]" name="QC_ILP_clear_Menu_Txn" duration-ms="1120460" started-at="2019-02-18T09:32:13Z" finished-at="2019-02-18T09:50:54Z">
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:47)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at tests.QCReturnCheck.qcRturn(QCReturnCheck.java:305)
at tests.QCStore.QC_ILP_clear_Menu_Txn(QCStore.java:710)
>>>>>>> f50b11208812b9a3da18b28f508ffb930f9f5fc9
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
<<<<<<< HEAD
        </test-method> <!-- JQC_ILP_Deposit_MidDay_Txn -->
        <test-method status="FAIL" signature="JQC_ILP_GraceDays_Deposit_dropdown_Txn()[pri:5, instance:tests.QCStore@20398b7c]" name="JQC_ILP_GraceDays_Deposit_dropdown_Txn" duration-ms="1" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_GraceDays_Deposit_dropdown_Txn(QCStore.java:1468)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_GraceDays_Deposit_dropdown_Txn -->
        <test-method status="FAIL" signature="JQC_ILP_SignaturLoan_Default_Txn()[pri:7, instance:tests.QCStore@20398b7c]" name="JQC_ILP_SignaturLoan_Default_Txn" duration-ms="1" started-at="2019-02-18T10:09:36Z" finished-at="2019-02-18T10:09:36Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at tests.QCStore.JQC_ILP_SignaturLoan_Default_Txn(QCStore.java:1685)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_ILP_SignaturLoan_Default_Txn -->
=======
        </test-method> <!-- QC_ILP_clear_Menu_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="697" started-at="2019-02-18T09:50:54Z" finished-at="2019-02-18T09:50:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_ILP_clear_Menu_Txn status=FAILURE method=QCStore.QC_ILP_clear_Menu_Txn()[pri:32, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T09:50:54Z" finished-at="2019-02-18T09:50:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5015" started-at="2019-02-18T09:50:55Z" finished-at="2019-02-18T09:51:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_ILP_Deposit_Return_Txn()[pri:35, instance:tests.QCStore@20398b7c]" name="QC_ILP_Deposit_Return_Txn" duration-ms="825542" started-at="2019-02-18T09:51:00Z" finished-at="2019-02-18T10:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_ILP_Deposit_Return_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T10:04:45Z" finished-at="2019-02-18T10:04:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="40" started-at="2019-02-18T10:04:45Z" finished-at="2019-02-18T10:04:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_ILP_Deposit_Return_Txn status=SUCCESS method=QCStore.QC_ILP_Deposit_Return_Txn()[pri:35, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5014" started-at="2019-02-18T10:04:45Z" finished-at="2019-02-18T10:04:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_InstallPayment_Ref_Rescind_Txn()[pri:47, instance:tests.QCStore@20398b7c]" name="QC_InstallPayment_Ref_Rescind_Txn" duration-ms="1111915" started-at="2019-02-18T10:04:50Z" finished-at="2019-02-18T10:23:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_InstallPayment_Ref_Rescind_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="1" started-at="2019-02-18T10:23:22Z" finished-at="2019-02-18T10:23:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="39" started-at="2019-02-18T10:23:22Z" finished-at="2019-02-18T10:23:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_InstallPayment_Ref_Rescind_Txn status=SUCCESS method=QCStore.QC_InstallPayment_Ref_Rescind_Txn()[pri:47, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5015" started-at="2019-02-18T10:23:22Z" finished-at="2019-02-18T10:23:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_LessInterest_VoidFullPayment_Txn()[pri:51, instance:tests.QCStore@20398b7c]" name="QC_LessInterest_VoidFullPayment_Txn" duration-ms="914756" started-at="2019-02-18T10:23:27Z" finished-at="2019-02-18T10:38:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_LessInterest_VoidFullPayment_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="1" started-at="2019-02-18T10:38:42Z" finished-at="2019-02-18T10:38:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="42" started-at="2019-02-18T10:38:42Z" finished-at="2019-02-18T10:38:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_LessInterest_VoidFullPayment_Txn status=SUCCESS method=QCStore.QC_LessInterest_VoidFullPayment_Txn()[pri:51, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5013" started-at="2019-02-18T10:38:42Z" finished-at="2019-02-18T10:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_NewLoan_TLPConversion_Txn()[pri:53, instance:tests.QCStore@20398b7c]" name="QC_NewLoan_TLPConversion_Txn" duration-ms="697495" started-at="2019-02-18T10:38:47Z" finished-at="2019-02-18T10:50:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_NewLoan_TLPConversion_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T10:50:25Z" finished-at="2019-02-18T10:50:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="570" started-at="2019-02-18T10:50:25Z" finished-at="2019-02-18T10:50:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_NewLoan_TLPConversion_Txn status=SUCCESS method=QCStore.QC_NewLoan_TLPConversion_Txn()[pri:53, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5012" started-at="2019-02-18T10:50:25Z" finished-at="2019-02-18T10:50:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_AgeStore_Void_Txn()[pri:54, instance:tests.QCStore@20398b7c]" name="QC_AgeStore_Void_Txn" duration-ms="815779" started-at="2019-02-18T10:50:30Z" finished-at="2019-02-18T11:04:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_AgeStore_Void_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T11:04:06Z" finished-at="2019-02-18T11:04:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="45" started-at="2019-02-18T11:04:06Z" finished-at="2019-02-18T11:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_AgeStore_Void_Txn status=SUCCESS method=QCStore.QC_AgeStore_Void_Txn()[pri:54, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@20398b7c]" name="killProcess" is-config="true" duration-ms="5011" started-at="2019-02-18T11:04:06Z" finished-at="2019-02-18T11:04:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_ILP_NewLoanInstallmentDeposit_Txn()[pri:55, instance:tests.QCStore@20398b7c]" name="QC_ILP_NewLoanInstallmentDeposit_Txn" duration-ms="4461680" started-at="2019-02-18T11:04:11Z" finished-at="2019-02-18T12:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_ILP_NewLoanInstallmentDeposit_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@20398b7c]" name="getResult" is-config="true" duration-ms="55" started-at="2019-02-18T12:18:33Z" finished-at="2019-02-18T12:18:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_ILP_NewLoanInstallmentDeposit_Txn status=SUCCESS method=QCStore.QC_ILP_NewLoanInstallmentDeposit_Txn()[pri:55, instance:tests.QCStore@20398b7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@20398b7c]" name="endReport" is-config="true" duration-ms="0" started-at="2019-02-18T12:18:33Z" finished-at="2019-02-18T12:18:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
>>>>>>> f50b11208812b9a3da18b28f508ffb930f9f5fc9
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
