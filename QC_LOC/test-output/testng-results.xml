<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<testng-results skipped="0" failed="1" ignored="107" total="114" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="7809621" started-at="2019-03-05T13:34:04Z" finished-at="2019-03-05T15:44:14Z">
    <groups>
      <group name="Anoop_EOD1">
        <method signature="QCStore.DepositAndEOD()[pri:416, instance:tests.QCStore@527740a2]" name="DepositAndEOD" class="tests.QCStore"/>
        <method signature="QCStore.DrawAndEOD()[pri:417, instance:tests.QCStore@527740a2]" name="DrawAndEOD" class="tests.QCStore"/>
        <method signature="QCStore.EODOnDueDate()[pri:412, instance:tests.QCStore@527740a2]" name="EODOnDueDate" class="tests.QCStore"/>
        <method signature="QCStore.HigherPaymentAndEod()[pri:414, instance:tests.QCStore@527740a2]" name="HigherPaymentAndEod" class="tests.QCStore"/>
        <method signature="QCStore.PayOFFandEod()[pri:415, instance:tests.QCStore@527740a2]" name="PayOFFandEod" class="tests.QCStore"/>
        <method signature="QCStore.PaymentAndEod()[pri:413, instance:tests.QCStore@527740a2]" name="PaymentAndEod" class="tests.QCStore"/>
        <method signature="QCStore.VoidandEod()[pri:414, instance:tests.QCStore@527740a2]" name="VoidandEod" class="tests.QCStore"/>
      </group> <!-- Anoop_EOD1 -->
    </groups>
    <test name="Test" duration-ms="7809621" started-at="2019-03-05T13:34:04Z" finished-at="2019-03-05T15:44:14Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="90" started-at="2019-03-05T13:34:04Z" finished-at="2019-03-05T13:34:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5019" started-at="2019-03-05T13:34:05Z" finished-at="2019-03-05T13:34:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="EODOnDueDate()[pri:412, instance:tests.QCStore@527740a2]" name="EODOnDueDate" duration-ms="1189381" started-at="2019-03-05T13:34:10Z" finished-at="2019-03-05T13:53:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EODOnDueDate -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="773" started-at="2019-03-05T13:53:59Z" finished-at="2019-03-05T13:54:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EODOnDueDate status=SUCCESS method=QCStore.EODOnDueDate()[pri:412, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5030" started-at="2019-03-05T13:54:00Z" finished-at="2019-03-05T13:54:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="FAIL" signature="PaymentAndEod()[pri:413, instance:tests.QCStore@527740a2]" name="PaymentAndEod" duration-ms="86160" started-at="2019-03-05T13:54:05Z" finished-at="2019-03-05T13:55:31Z">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[Modal dialog present: Please Select Product
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS2-48', ip: '192.168.2.48', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserAttachTimeout: 0, browserName: internet explorer, cssSelectorsEnabled: true, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, handlesAlerts: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.forceCreateProcessApi: false, ie.usePerProcessProxy: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:34656/, javascriptEnabled: true, nativeEvents: true, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, takesScreenshot: true, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 65697d82-dfdd-47b9-bc12-ede5e15cce8a
*** Element info: {Using=name, value=advanceRequestBean.paymentCollateralType}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: Modal dialog present: Please Select Product
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'QTLSYS2-48', ip: '192.168.2.48', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.ie.InternetExplorerDriver
Capabilities {browserAttachTimeout: 0, browserName: internet explorer, cssSelectorsEnabled: true, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, handlesAlerts: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.forceCreateProcessApi: false, ie.usePerProcessProxy: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:34656/, javascriptEnabled: true, nativeEvents: true, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, takesScreenshot: true, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11}
Session ID: 65697d82-dfdd-47b9-bc12-ede5e15cce8a
*** Element info: {Using=name, value=advanceRequestBean.paymentCollateralType}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.createUnhandledAlertException(ErrorHandler.java:195)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:400)
at org.openqa.selenium.By$ByName.findElement(By.java:284)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at tests.AQCCSRNewLoan.LOC(AQCCSRNewLoan.java:213)
at tests.AQCCSRNewLoan.newLoan(AQCCSRNewLoan.java:162)
at tests.QCStore.PaymentAndEod(QCStore.java:5571)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaymentAndEod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="1377" started-at="2019-03-05T13:55:31Z" finished-at="2019-03-05T13:55:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PaymentAndEod status=FAILURE method=QCStore.PaymentAndEod()[pri:413, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5019" started-at="2019-03-05T13:55:32Z" finished-at="2019-03-05T13:55:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="HigherPaymentAndEod()[pri:414, instance:tests.QCStore@527740a2]" name="HigherPaymentAndEod" duration-ms="1331377" started-at="2019-03-05T13:55:37Z" finished-at="2019-03-05T14:17:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HigherPaymentAndEod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="607" started-at="2019-03-05T14:17:49Z" finished-at="2019-03-05T14:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HigherPaymentAndEod status=SUCCESS method=QCStore.HigherPaymentAndEod()[pri:414, instance:tests.QCStore@527740a2] output={null}]]]>
=======
<<<<<<< HEAD
<testng-results skipped="0" failed="0" ignored="100" total="114" passed="14">
=======
<<<<<<< HEAD
<testng-results skipped="0" failed="0" ignored="112" total="114" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="7298522" started-at="2019-03-04T11:45:55Z" finished-at="2019-03-04T13:47:33Z">
    <groups>
      <group name="EOD2">
        <method signature="QCStore.LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn()[pri:69, instance:tests.QCStore@527740a2]" name="LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn" class="tests.QCStore"/>
        <method signature="QCStore.LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn()[pri:70, instance:tests.QCStore@527740a2]" name="LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn" class="tests.QCStore"/>
      </group> <!-- EOD2 -->
    </groups>
    <test name="Test" duration-ms="7298522" started-at="2019-03-04T11:45:55Z" finished-at="2019-03-04T13:47:33Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="196" started-at="2019-03-04T11:45:55Z" finished-at="2019-03-04T11:45:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5125" started-at="2019-03-04T11:45:55Z" finished-at="2019-03-04T11:46:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn()[pri:69, instance:tests.QCStore@527740a2]" name="LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn" duration-ms="4654715" started-at="2019-03-04T11:46:00Z" finished-at="2019-03-04T13:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="256" started-at="2019-03-04T13:03:35Z" finished-at="2019-03-04T13:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn status=SUCCESS method=QCStore.LOC_ACHDeposit_EOD_Return_EOD_Default_Redeposit_Txn()[pri:69, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5098" started-at="2019-03-04T13:03:35Z" finished-at="2019-03-04T13:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn()[pri:70, instance:tests.QCStore@527740a2]" name="LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn" duration-ms="2633015" started-at="2019-03-04T13:03:40Z" finished-at="2019-03-04T13:47:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="94" started-at="2019-03-04T13:47:33Z" finished-at="2019-03-04T13:47:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn status=SUCCESS method=QCStore.LOC_ACHDeposit_EOD_Return_EOD_Redeposit_Txn()[pri:70, instance:tests.QCStore@527740a2] output={null}]]]>
=======
<<<<<<< HEAD
<testng-results skipped="0" failed="1" ignored="101" total="102" passed="0">
>>>>>>> cfd4415cf923aceeec44a0b1fca621dca6ccc529
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="23917423" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T19:57:20Z">
    <groups>
      <group name="Ratikanta_NEOD">
        <method signature="QCStore.RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata()[pri:204, instance:tests.QCStore@527740a2]" name="RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata()[pri:208, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_DefaultPayment_Txn_Testdata()[pri:205, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata()[pri:206, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata()[pri:209, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata()[pri:210, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata()[pri:207, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata()[pri:203, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata()[pri:202, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_ManualDefault_Txn_Testdata()[pri:201, instance:tests.QCStore@527740a2]" name="RQC_LOC_ManualDefault_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata()[pri:214, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata()[pri:213, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_PayOff_Closure_Txn_Testdata()[pri:211, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata()[pri:212, instance:tests.QCStore@527740a2]" name="RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata" class="tests.QCStore"/>
      </group> <!-- Ratikanta_NEOD -->
    </groups>
    <test name="Test" duration-ms="23917423" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T19:57:20Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="116" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T13:18:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5004" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T13:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_ManualDefault_Txn_Testdata()[pri:201, instance:tests.QCStore@527740a2]" name="RQC_LOC_ManualDefault_Txn_Testdata" duration-ms="1049891" started-at="2019-03-05T13:18:48Z" finished-at="2019-03-05T13:36:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_ManualDefault_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="203" started-at="2019-03-05T13:36:18Z" finished-at="2019-03-05T13:36:18Z">
          <params>
            <param index="0">
              <value>
<<<<<<< HEAD
                <![CDATA[[TestResult name=RQC_LOC_ManualDefault_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_ManualDefault_Txn_Testdata()[pri:201, instance:tests.QCStore@527740a2] output={null}]]]>
=======
                <![CDATA[[TestResult name=EODOnDueDate status=FAILURE method=QCStore.EODOnDueDate()[pri:412, instance:tests.QCStore@799f10e1] output={null}]]]>
>>>>>>> 034e575dc96add0c75e87be5f99f7163fb9e1980
>>>>>>> cfd4415cf923aceeec44a0b1fca621dca6ccc529
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T13:36:18Z" finished-at="2019-03-05T13:36:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata()[pri:202, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata" duration-ms="1185325" started-at="2019-03-05T13:36:23Z" finished-at="2019-03-05T13:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="52" started-at="2019-03-05T13:56:08Z" finished-at="2019-03-05T13:56:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata()[pri:202, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T13:56:08Z" finished-at="2019-03-05T13:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata()[pri:203, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata" duration-ms="3208681" started-at="2019-03-05T13:56:13Z" finished-at="2019-03-05T14:49:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="38" started-at="2019-03-05T14:49:42Z" finished-at="2019-03-05T14:49:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata()[pri:203, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T14:49:42Z" finished-at="2019-03-05T14:49:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata()[pri:204, instance:tests.QCStore@527740a2]" name="RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata" duration-ms="1957103" started-at="2019-03-05T14:49:47Z" finished-at="2019-03-05T15:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="40" started-at="2019-03-05T15:22:24Z" finished-at="2019-03-05T15:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata()[pri:204, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-05T15:22:24Z" finished-at="2019-03-05T15:22:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_DefaultPayment_Txn_Testdata()[pri:205, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Txn_Testdata" duration-ms="2086444" started-at="2019-03-05T15:22:29Z" finished-at="2019-03-05T15:57:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_DefaultPayment_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="43" started-at="2019-03-05T15:57:15Z" finished-at="2019-03-05T15:57:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_DefaultPayment_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_DefaultPayment_Txn_Testdata()[pri:205, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5005" started-at="2019-03-05T15:57:16Z" finished-at="2019-03-05T15:57:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata()[pri:206, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata" duration-ms="1969977" started-at="2019-03-05T15:57:21Z" finished-at="2019-03-05T16:30:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="43" started-at="2019-03-05T16:30:11Z" finished-at="2019-03-05T16:30:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata()[pri:206, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T16:30:11Z" finished-at="2019-03-05T16:30:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata()[pri:207, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata" duration-ms="1994713" started-at="2019-03-05T16:30:16Z" finished-at="2019-03-05T17:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="40" started-at="2019-03-05T17:03:30Z" finished-at="2019-03-05T17:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata()[pri:207, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-05T17:03:30Z" finished-at="2019-03-05T17:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata()[pri:208, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata" duration-ms="2042928" started-at="2019-03-05T17:03:35Z" finished-at="2019-03-05T17:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="38" started-at="2019-03-05T17:37:38Z" finished-at="2019-03-05T17:37:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata()[pri:208, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T17:37:38Z" finished-at="2019-03-05T17:37:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata()[pri:209, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata" duration-ms="1954314" started-at="2019-03-05T17:37:43Z" finished-at="2019-03-05T18:10:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="46" started-at="2019-03-05T18:10:18Z" finished-at="2019-03-05T18:10:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata()[pri:209, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5003" started-at="2019-03-05T18:10:18Z" finished-at="2019-03-05T18:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata()[pri:210, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata" duration-ms="2004618" started-at="2019-03-05T18:10:23Z" finished-at="2019-03-05T18:43:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="42" started-at="2019-03-05T18:43:47Z" finished-at="2019-03-05T18:43:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata()[pri:210, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> 792c0d99c7dc98fb911ab128b442f178e0a75ffb
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5032" started-at="2019-03-05T14:17:49Z" finished-at="2019-03-05T14:17:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="VoidandEod()[pri:414, instance:tests.QCStore@527740a2]" name="VoidandEod" duration-ms="1363107" started-at="2019-03-05T14:17:54Z" finished-at="2019-03-05T14:40:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VoidandEod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="607" started-at="2019-03-05T14:40:37Z" finished-at="2019-03-05T14:40:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VoidandEod status=SUCCESS method=QCStore.VoidandEod()[pri:414, instance:tests.QCStore@527740a2] output={null}]]]>
=======
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T18:43:47Z" finished-at="2019-03-05T18:43:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_PayOff_Closure_Txn_Testdata()[pri:211, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_Txn_Testdata" duration-ms="556343" started-at="2019-03-05T18:43:52Z" finished-at="2019-03-05T18:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_PayOff_Closure_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="46" started-at="2019-03-05T18:53:09Z" finished-at="2019-03-05T18:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_PayOff_Closure_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_PayOff_Closure_Txn_Testdata()[pri:211, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> 792c0d99c7dc98fb911ab128b442f178e0a75ffb
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5035" started-at="2019-03-05T14:40:38Z" finished-at="2019-03-05T14:40:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="PayOFFandEod()[pri:415, instance:tests.QCStore@527740a2]" name="PayOFFandEod" duration-ms="1272827" started-at="2019-03-05T14:40:43Z" finished-at="2019-03-05T15:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PayOFFandEod -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="612" started-at="2019-03-05T15:01:56Z" finished-at="2019-03-05T15:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PayOFFandEod status=SUCCESS method=QCStore.PayOFFandEod()[pri:415, instance:tests.QCStore@527740a2] output={null}]]]>
=======
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5003" started-at="2019-03-05T18:53:09Z" finished-at="2019-03-05T18:53:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata()[pri:212, instance:tests.QCStore@527740a2]" name="RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata" duration-ms="711511" started-at="2019-03-05T18:53:14Z" finished-at="2019-03-05T19:05:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="58" started-at="2019-03-05T19:05:05Z" finished-at="2019-03-05T19:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata()[pri:212, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> 792c0d99c7dc98fb911ab128b442f178e0a75ffb
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5030" started-at="2019-03-05T15:01:56Z" finished-at="2019-03-05T15:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="DepositAndEOD()[pri:416, instance:tests.QCStore@527740a2]" name="DepositAndEOD" duration-ms="1215893" started-at="2019-03-05T15:02:02Z" finished-at="2019-03-05T15:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DepositAndEOD -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="626" started-at="2019-03-05T15:22:17Z" finished-at="2019-03-05T15:22:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DepositAndEOD status=SUCCESS method=QCStore.DepositAndEOD()[pri:416, instance:tests.QCStore@527740a2] output={null}]]]>
=======
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T19:05:05Z" finished-at="2019-03-05T19:05:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata()[pri:213, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata" duration-ms="786597" started-at="2019-03-05T19:05:10Z" finished-at="2019-03-05T19:18:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="82" started-at="2019-03-05T19:18:17Z" finished-at="2019-03-05T19:18:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata()[pri:213, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> 792c0d99c7dc98fb911ab128b442f178e0a75ffb
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
<<<<<<< HEAD
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5025" started-at="2019-03-05T15:22:18Z" finished-at="2019-03-05T15:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="DrawAndEOD()[pri:417, instance:tests.QCStore@527740a2]" name="DrawAndEOD" duration-ms="1310364" started-at="2019-03-05T15:22:23Z" finished-at="2019-03-05T15:44:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DrawAndEOD -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="599" started-at="2019-03-05T15:44:13Z" finished-at="2019-03-05T15:44:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DrawAndEOD status=SUCCESS method=QCStore.DrawAndEOD()[pri:417, instance:tests.QCStore@527740a2] output={null}]]]>
=======
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-05T19:18:17Z" finished-at="2019-03-05T19:18:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata()[pri:214, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata" duration-ms="2337406" started-at="2019-03-05T19:18:22Z" finished-at="2019-03-05T19:57:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="611" started-at="2019-03-05T19:57:19Z" finished-at="2019-03-05T19:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata()[pri:214, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> 792c0d99c7dc98fb911ab128b442f178e0a75ffb
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
