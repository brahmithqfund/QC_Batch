<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="100" total="114" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="23917423" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T19:57:20Z">
    <groups>
      <group name="Ratikanta_NEOD">
        <method signature="QCStore.RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata()[pri:204, instance:tests.QCStore@527740a2]" name="RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata()[pri:208, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_DefaultPayment_Txn_Testdata()[pri:205, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata()[pri:206, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata()[pri:209, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata()[pri:210, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata()[pri:207, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata()[pri:203, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata()[pri:202, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_ManualDefault_Txn_Testdata()[pri:201, instance:tests.QCStore@527740a2]" name="RQC_LOC_ManualDefault_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata()[pri:214, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata()[pri:213, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_PayOff_Closure_Txn_Testdata()[pri:211, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_Txn_Testdata" class="tests.QCStore"/>
        <method signature="QCStore.RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata()[pri:212, instance:tests.QCStore@527740a2]" name="RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata" class="tests.QCStore"/>
      </group> <!-- Ratikanta_NEOD -->
    </groups>
    <test name="Test" duration-ms="23917423" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T19:57:20Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="116" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T13:18:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5004" started-at="2019-03-05T13:18:43Z" finished-at="2019-03-05T13:18:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_ManualDefault_Txn_Testdata()[pri:201, instance:tests.QCStore@527740a2]" name="RQC_LOC_ManualDefault_Txn_Testdata" duration-ms="1049891" started-at="2019-03-05T13:18:48Z" finished-at="2019-03-05T13:36:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_ManualDefault_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="203" started-at="2019-03-05T13:36:18Z" finished-at="2019-03-05T13:36:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_ManualDefault_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_ManualDefault_Txn_Testdata()[pri:201, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T13:36:18Z" finished-at="2019-03-05T13:36:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata()[pri:202, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata" duration-ms="1185325" started-at="2019-03-05T13:36:23Z" finished-at="2019-03-05T13:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="52" started-at="2019-03-05T13:56:08Z" finished-at="2019-03-05T13:56:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Deposit_Return_ManualDefault_Txn_Testdata()[pri:202, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T13:56:08Z" finished-at="2019-03-05T13:56:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata()[pri:203, instance:tests.QCStore@527740a2]" name="RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata" duration-ms="3208681" started-at="2019-03-05T13:56:13Z" finished-at="2019-03-05T14:49:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="38" started-at="2019-03-05T14:49:42Z" finished-at="2019-03-05T14:49:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Deposit_Return_2ndDeposit_Clear_3rdDeposit_Return_Default_Txn_Testdata()[pri:203, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T14:49:42Z" finished-at="2019-03-05T14:49:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata()[pri:204, instance:tests.QCStore@527740a2]" name="RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata" duration-ms="1957103" started-at="2019-03-05T14:49:47Z" finished-at="2019-03-05T15:22:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="40" started-at="2019-03-05T15:22:24Z" finished-at="2019-03-05T15:22:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_2missedPayment_Default_EOD_Txn_Testdata()[pri:204, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-05T15:22:24Z" finished-at="2019-03-05T15:22:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_DefaultPayment_Txn_Testdata()[pri:205, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Txn_Testdata" duration-ms="2086444" started-at="2019-03-05T15:22:29Z" finished-at="2019-03-05T15:57:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_DefaultPayment_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="43" started-at="2019-03-05T15:57:15Z" finished-at="2019-03-05T15:57:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_DefaultPayment_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_DefaultPayment_Txn_Testdata()[pri:205, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5005" started-at="2019-03-05T15:57:16Z" finished-at="2019-03-05T15:57:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata()[pri:206, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata" duration-ms="1969977" started-at="2019-03-05T15:57:21Z" finished-at="2019-03-05T16:30:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="43" started-at="2019-03-05T16:30:11Z" finished-at="2019-03-05T16:30:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_DefaultPayment_Void_Txn_Testdata()[pri:206, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T16:30:11Z" finished-at="2019-03-05T16:30:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata()[pri:207, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata" duration-ms="1994713" started-at="2019-03-05T16:30:16Z" finished-at="2019-03-05T17:03:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="40" started-at="2019-03-05T17:03:30Z" finished-at="2019-03-05T17:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_PartialDefaultPayment_Void_Txn_Testdata()[pri:207, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-05T17:03:30Z" finished-at="2019-03-05T17:03:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata()[pri:208, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata" duration-ms="2042928" started-at="2019-03-05T17:03:35Z" finished-at="2019-03-05T17:37:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="38" started-at="2019-03-05T17:37:38Z" finished-at="2019-03-05T17:37:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_DefaultPayment_Return_Txn_Testdata()[pri:208, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T17:37:38Z" finished-at="2019-03-05T17:37:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata()[pri:209, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata" duration-ms="1954314" started-at="2019-03-05T17:37:43Z" finished-at="2019-03-05T18:10:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="46" started-at="2019-03-05T18:10:18Z" finished-at="2019-03-05T18:10:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Txn_Testdata()[pri:209, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5003" started-at="2019-03-05T18:10:18Z" finished-at="2019-03-05T18:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata()[pri:210, instance:tests.QCStore@527740a2]" name="RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata" duration-ms="2004618" started-at="2019-03-05T18:10:23Z" finished-at="2019-03-05T18:43:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="42" started-at="2019-03-05T18:43:47Z" finished-at="2019-03-05T18:43:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Default_PartialDefaultPayment_FullDefaultPayment_Void_Txn_Testdata()[pri:210, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T18:43:47Z" finished-at="2019-03-05T18:43:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_PayOff_Closure_Txn_Testdata()[pri:211, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_Txn_Testdata" duration-ms="556343" started-at="2019-03-05T18:43:52Z" finished-at="2019-03-05T18:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_PayOff_Closure_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="46" started-at="2019-03-05T18:53:09Z" finished-at="2019-03-05T18:53:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_PayOff_Closure_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_PayOff_Closure_Txn_Testdata()[pri:211, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5003" started-at="2019-03-05T18:53:09Z" finished-at="2019-03-05T18:53:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata()[pri:212, instance:tests.QCStore@527740a2]" name="RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata" duration-ms="711511" started-at="2019-03-05T18:53:14Z" finished-at="2019-03-05T19:05:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="58" started-at="2019-03-05T19:05:05Z" finished-at="2019-03-05T19:05:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_Payment_PayOff_Closure_Void_Txn_Testdata()[pri:212, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-05T19:05:05Z" finished-at="2019-03-05T19:05:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata()[pri:213, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata" duration-ms="786597" started-at="2019-03-05T19:05:10Z" finished-at="2019-03-05T19:18:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="82" started-at="2019-03-05T19:18:17Z" finished-at="2019-03-05T19:18:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_PayOff_Closure_PayoffReturn_Txn_Testdata()[pri:213, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-05T19:18:17Z" finished-at="2019-03-05T19:18:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata()[pri:214, instance:tests.QCStore@527740a2]" name="RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata" duration-ms="2337406" started-at="2019-03-05T19:18:22Z" finished-at="2019-03-05T19:57:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="611" started-at="2019-03-05T19:57:19Z" finished-at="2019-03-05T19:57:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata status=SUCCESS method=QCStore.RQC_LOC_PayOff_Agestore180days_AutoClosure_Txn_Testdata()[pri:214, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
