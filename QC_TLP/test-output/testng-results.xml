<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="23" total="35" passed="12">
  <reporter-output>
  </reporter-output>
<<<<<<< HEAD
  <suite name="Suite" duration-ms="1071507" started-at="2019-03-11T12:29:19Z" finished-at="2019-03-11T12:47:11Z">
    <groups>
      <group name="Janaki_EOD_set2">
        <method signature="QCStore.JQC_TLP_GraceDays_Deposit_EOD_Txn()[pri:210, instance:tests.QCStore@527740a2]" name="JQC_TLP_GraceDays_Deposit_EOD_Txn" class="tests.QCStore"/>
      </group> <!-- Janaki_EOD_set2 -->
    </groups>
    <test name="Test" duration-ms="1071507" started-at="2019-03-11T12:29:19Z" finished-at="2019-03-11T12:47:11Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="82" started-at="2019-03-11T12:29:19Z" finished-at="2019-03-11T12:29:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5010" started-at="2019-03-11T12:29:19Z" finished-at="2019-03-11T12:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="JQC_TLP_GraceDays_Deposit_EOD_Txn()[pri:210, instance:tests.QCStore@527740a2]" name="JQC_TLP_GraceDays_Deposit_EOD_Txn" duration-ms="1066227" started-at="2019-03-11T12:29:24Z" finished-at="2019-03-11T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JQC_TLP_GraceDays_Deposit_EOD_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="1" started-at="2019-03-11T12:47:11Z" finished-at="2019-03-11T12:47:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="172" started-at="2019-03-11T12:47:11Z" finished-at="2019-03-11T12:47:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=JQC_TLP_GraceDays_Deposit_EOD_Txn status=SUCCESS method=QCStore.JQC_TLP_GraceDays_Deposit_EOD_Txn()[pri:210, instance:tests.QCStore@527740a2] output={null}]]]>
=======
  <suite name="Suite" duration-ms="10742577" started-at="2019-03-12T12:57:19Z" finished-at="2019-03-12T15:56:21Z">
    <groups>
      <group name="Brahmith">
        <method signature="QCStore.QC_AgeStore_Void_Txn()[pri:105, instance:tests.QCStore@527740a2]" name="QC_AgeStore_Void_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_Installmentpayment_Txn()[pri:118, instance:tests.QCStore@527740a2]" name="QC_Installmentpayment_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_Installmentpayment_Void_Txn()[pri:119, instance:tests.QCStore@527740a2]" name="QC_Installmentpayment_Void_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_NewLoan_Promotion_Txn()[pri:103, instance:tests.QCStore@527740a2]" name="QC_NewLoan_Promotion_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_NewLoan_Void_Txn()[pri:104, instance:tests.QCStore@527740a2]" name="QC_NewLoan_Void_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_PayAnyotherAmount_Txn()[pri:120, instance:tests.QCStore@527740a2]" name="QC_PayAnyotherAmount_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_PayAnyotherAmount_Void_Txn()[pri:121, instance:tests.QCStore@527740a2]" name="QC_PayAnyotherAmount_Void_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_TLP_Buyback_Txn()[pri:116, instance:tests.QCStore@527740a2]" name="QC_TLP_Buyback_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_TLP_Buyback_Void_Txn()[pri:117, instance:tests.QCStore@527740a2]" name="QC_TLP_Buyback_Void_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_TLP_NewLoan_Txn()[pri:101, instance:tests.QCStore@527740a2]" name="QC_TLP_NewLoan_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_TLP_Writeoff_Recovery_Txn()[pri:131, instance:tests.QCStore@527740a2]" name="QC_TLP_Writeoff_Recovery_Txn" class="tests.QCStore"/>
        <method signature="QCStore.QC_TLP_Writeoff_Recovery_Void_Txn()[pri:132, instance:tests.QCStore@527740a2]" name="QC_TLP_Writeoff_Recovery_Void_Txn" class="tests.QCStore"/>
      </group> <!-- Brahmith -->
    </groups>
    <test name="Test" duration-ms="10742577" started-at="2019-03-12T12:57:19Z" finished-at="2019-03-12T15:56:21Z">
      <class name="tests.QCStore">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.QCStore@527740a2]" name="setup" is-config="true" duration-ms="103" started-at="2019-03-12T12:57:19Z" finished-at="2019-03-12T12:57:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-12T12:57:19Z" finished-at="2019-03-12T12:57:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_TLP_NewLoan_Txn()[pri:101, instance:tests.QCStore@527740a2]" name="QC_TLP_NewLoan_Txn" duration-ms="258718" started-at="2019-03-12T12:57:24Z" finished-at="2019-03-12T13:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_TLP_NewLoan_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T13:01:43Z" finished-at="2019-03-12T13:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="199" started-at="2019-03-12T13:01:43Z" finished-at="2019-03-12T13:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_TLP_NewLoan_Txn status=SUCCESS method=QCStore.QC_TLP_NewLoan_Txn()[pri:101, instance:tests.QCStore@527740a2] output={null}]]]>
>>>>>>> brahmith1.1
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-12T13:01:43Z" finished-at="2019-03-12T13:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_NewLoan_Promotion_Txn()[pri:103, instance:tests.QCStore@527740a2]" name="QC_NewLoan_Promotion_Txn" duration-ms="246638" started-at="2019-03-12T13:01:48Z" finished-at="2019-03-12T13:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_NewLoan_Promotion_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T13:05:54Z" finished-at="2019-03-12T13:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="61" started-at="2019-03-12T13:05:54Z" finished-at="2019-03-12T13:05:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_NewLoan_Promotion_Txn status=SUCCESS method=QCStore.QC_NewLoan_Promotion_Txn()[pri:103, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T13:05:54Z" finished-at="2019-03-12T13:05:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_NewLoan_Void_Txn()[pri:104, instance:tests.QCStore@527740a2]" name="QC_NewLoan_Void_Txn" duration-ms="267783" started-at="2019-03-12T13:05:59Z" finished-at="2019-03-12T13:10:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_NewLoan_Void_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="49" started-at="2019-03-12T13:10:27Z" finished-at="2019-03-12T13:10:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_NewLoan_Void_Txn status=SUCCESS method=QCStore.QC_NewLoan_Void_Txn()[pri:104, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T13:10:27Z" finished-at="2019-03-12T13:10:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5002" started-at="2019-03-12T13:10:27Z" finished-at="2019-03-12T13:10:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_AgeStore_Void_Txn()[pri:105, instance:tests.QCStore@527740a2]" name="QC_AgeStore_Void_Txn" duration-ms="1033944" started-at="2019-03-12T13:10:32Z" finished-at="2019-03-12T13:27:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_AgeStore_Void_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="33" started-at="2019-03-12T13:27:46Z" finished-at="2019-03-12T13:27:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_AgeStore_Void_Txn status=SUCCESS method=QCStore.QC_AgeStore_Void_Txn()[pri:105, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T13:27:46Z" finished-at="2019-03-12T13:27:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T13:27:46Z" finished-at="2019-03-12T13:27:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_TLP_Buyback_Txn()[pri:116, instance:tests.QCStore@527740a2]" name="QC_TLP_Buyback_Txn" duration-ms="1055436" started-at="2019-03-12T13:27:51Z" finished-at="2019-03-12T13:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_TLP_Buyback_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="32" started-at="2019-03-12T13:45:27Z" finished-at="2019-03-12T13:45:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_TLP_Buyback_Txn status=SUCCESS method=QCStore.QC_TLP_Buyback_Txn()[pri:116, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T13:45:27Z" finished-at="2019-03-12T13:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-12T13:45:27Z" finished-at="2019-03-12T13:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_TLP_Buyback_Void_Txn()[pri:117, instance:tests.QCStore@527740a2]" name="QC_TLP_Buyback_Void_Txn" duration-ms="1084651" started-at="2019-03-12T13:45:32Z" finished-at="2019-03-12T14:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_TLP_Buyback_Void_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="1" started-at="2019-03-12T14:03:36Z" finished-at="2019-03-12T14:03:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="46" started-at="2019-03-12T14:03:36Z" finished-at="2019-03-12T14:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_TLP_Buyback_Void_Txn status=SUCCESS method=QCStore.QC_TLP_Buyback_Void_Txn()[pri:117, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T14:03:36Z" finished-at="2019-03-12T14:03:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_Installmentpayment_Txn()[pri:118, instance:tests.QCStore@527740a2]" name="QC_Installmentpayment_Txn" duration-ms="918309" started-at="2019-03-12T14:03:41Z" finished-at="2019-03-12T14:19:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_Installmentpayment_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="54" started-at="2019-03-12T14:19:00Z" finished-at="2019-03-12T14:19:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_Installmentpayment_Txn status=SUCCESS method=QCStore.QC_Installmentpayment_Txn()[pri:118, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T14:19:00Z" finished-at="2019-03-12T14:19:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T14:19:00Z" finished-at="2019-03-12T14:19:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_Installmentpayment_Void_Txn()[pri:119, instance:tests.QCStore@527740a2]" name="QC_Installmentpayment_Void_Txn" duration-ms="1182453" started-at="2019-03-12T14:19:05Z" finished-at="2019-03-12T14:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_Installmentpayment_Void_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="44" started-at="2019-03-12T14:38:47Z" finished-at="2019-03-12T14:38:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_Installmentpayment_Void_Txn status=SUCCESS method=QCStore.QC_Installmentpayment_Void_Txn()[pri:119, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T14:38:47Z" finished-at="2019-03-12T14:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T14:38:47Z" finished-at="2019-03-12T14:38:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_PayAnyotherAmount_Txn()[pri:120, instance:tests.QCStore@527740a2]" name="QC_PayAnyotherAmount_Txn" duration-ms="1016316" started-at="2019-03-12T14:38:52Z" finished-at="2019-03-12T14:55:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_PayAnyotherAmount_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="53" started-at="2019-03-12T14:55:49Z" finished-at="2019-03-12T14:55:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_PayAnyotherAmount_Txn status=SUCCESS method=QCStore.QC_PayAnyotherAmount_Txn()[pri:120, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T14:55:49Z" finished-at="2019-03-12T14:55:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T14:55:49Z" finished-at="2019-03-12T14:55:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_PayAnyotherAmount_Void_Txn()[pri:121, instance:tests.QCStore@527740a2]" name="QC_PayAnyotherAmount_Void_Txn" duration-ms="1106512" started-at="2019-03-12T14:55:54Z" finished-at="2019-03-12T15:14:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_PayAnyotherAmount_Void_Txn -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T15:14:20Z" finished-at="2019-03-12T15:14:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="46" started-at="2019-03-12T15:14:20Z" finished-at="2019-03-12T15:14:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_PayAnyotherAmount_Void_Txn status=SUCCESS method=QCStore.QC_PayAnyotherAmount_Void_Txn()[pri:121, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5001" started-at="2019-03-12T15:14:20Z" finished-at="2019-03-12T15:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_TLP_Writeoff_Recovery_Txn()[pri:131, instance:tests.QCStore@527740a2]" name="QC_TLP_Writeoff_Recovery_Txn" duration-ms="1361840" started-at="2019-03-12T15:14:25Z" finished-at="2019-03-12T15:37:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_TLP_Writeoff_Recovery_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="52" started-at="2019-03-12T15:37:07Z" finished-at="2019-03-12T15:37:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_TLP_Writeoff_Recovery_Txn status=SUCCESS method=QCStore.QC_TLP_Writeoff_Recovery_Txn()[pri:131, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T15:37:07Z" finished-at="2019-03-12T15:37:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="killProcess()[pri:0, instance:tests.QCStore@527740a2]" name="killProcess" is-config="true" duration-ms="5000" started-at="2019-03-12T15:37:07Z" finished-at="2019-03-12T15:37:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- killProcess -->
        <test-method status="PASS" signature="QC_TLP_Writeoff_Recovery_Void_Txn()[pri:132, instance:tests.QCStore@527740a2]" name="QC_TLP_Writeoff_Recovery_Void_Txn" duration-ms="1149108" started-at="2019-03-12T15:37:12Z" finished-at="2019-03-12T15:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QC_TLP_Writeoff_Recovery_Void_Txn -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:tests.QCStore@527740a2]" name="getResult" is-config="true" duration-ms="54" started-at="2019-03-12T15:56:21Z" finished-at="2019-03-12T15:56:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QC_TLP_Writeoff_Recovery_Void_Txn status=SUCCESS method=QCStore.QC_TLP_Writeoff_Recovery_Void_Txn()[pri:132, instance:tests.QCStore@527740a2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:tests.QCStore@527740a2]" name="endReport" is-config="true" duration-ms="0" started-at="2019-03-12T15:56:21Z" finished-at="2019-03-12T15:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- tests.QCStore -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
